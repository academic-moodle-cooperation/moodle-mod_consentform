{"version":3,"sources":["../src/checkboxcontroller.js"],"names":["define","$","log","Checkboxcontroller","table","prototype","updateCheckboxes","e","preventDefault","type","data","subtype","checkboxes","classes","currentTarget","className","toString","idx","replace","selector","inst","debug","each","current","prop","click","instance","init","on","css"],"mappings":"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","sourcesContent":["// This file is part of mod_consentform for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * checkboxcontroller.js\n *\n * @package mod\n * @subpackage consentform\n * @copyright 2019 Thomas Niedermaier (thomas.niedermaier@meduniwien.ac.at)\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n  * @module mod_consentform/checkboxcontroller\n  */\ndefine(['jquery', 'core/log'], function($, log) {\n\n    /**\n     * @constructor\n     * @alias module:mod_consentform/checkboxcontroller\n     */\n    var Checkboxcontroller = function() {\n        // Table ID!\n        this.table = $('#consentform_activitytable');\n    };\n\n    Checkboxcontroller.prototype.updateCheckboxes = function(e) {\n        e.preventDefault();\n\n        var type = e.data.type;\n        var subtype = e.data.subtype;\n        var checkboxes;\n\n        if (subtype == 'section') {\n            var classes = e.currentTarget.className.toString();\n            var idx = classes.replace(\"co_section_all\", \"\").replace(\"co_section_none\", \"\").replace(\"section\", \"\").replace(\" \", \"\");\n            var selector = 'input.section' + idx + ':checkbox';\n            checkboxes = $(selector, e.data.inst.table);\n            log.debug(selector);\n        } else {\n            checkboxes = $('td input:checkbox', e.data.inst.table);\n        }\n\n        if (type == 'all') {\n            checkboxes.each(function(idx, current) {\n                if ($(current).prop('checked') == false) {\n                    $(current).click();\n                }\n            });\n        } else if (type == 'none') {\n            checkboxes.each(function(idx, current) {\n                if ($(current).prop('checked') == true) {\n                    $(current).click();\n                }\n            });\n        }\n\n        return true;\n    };\n\n    var instance = new Checkboxcontroller();\n\n    /**\n     * Initializer registers event-listeners for each checkbox\n     *\n     * @return {bool} true if everything's ok (no error-handling implemented)\n     */\n    instance.init = function() {\n\n        $('.co_all').on('click', null, {inst: this, type: 'all', subtype: 'all'}, this.updateCheckboxes);\n        $('.co_none').on('click', null, {inst: this, type: 'none', subtype: 'all'}, this.updateCheckboxes);\n\n        $('.co_section_all').on(\n            'click', null, {inst: this, type: 'all', subtype: 'section'},\n            this.updateCheckboxes);\n        $('.co_section_none').on(\n            'click', null, {inst: this, type: 'none', subtype: 'section'},\n            this.updateCheckboxes);\n\n        $('#consentform_activitytable').css('visibility', 'visible');\n\n        return true;\n    };\n\n    return instance;\n});\n"],"file":"checkboxcontroller.min.js"}